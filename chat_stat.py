# chat_stats.py
import json
import os

STATS_FILE = "stats.json"


def _load_stats() -> dict:
    if not os.path.exists(STATS_FILE):
        return {}
    with open(STATS_FILE, "r", encoding="utf-8") as f:
        return json.load(f)


def _fmt_int(n: int) -> str:
    try:
        return f"{int(n):,}".replace(",", " ")
    except Exception:
        return str(n)


def _fmt_float(n: float, digits: int = 1) -> str:
    try:
        s = f"{float(n):.{digits}f}"
        # –¥–ª—è –≤–∏–¥–∞ "12 345.6" ‚Äî —Ç–æ–ª—å–∫–æ —Ü–µ–ª—É—é —á–∞—Å—Ç—å —Ä–∞–∑–¥–µ–ª—è–µ–º –ø—Ä–æ–±–µ–ª–∞–º–∏
        if "." in s:
            whole, frac = s.split(".")
            whole_fmt = f"{int(whole):,}".replace(",", " ")
            return f"{whole_fmt}.{frac}"
        else:
            return f"{int(float(s)):,}".replace(",", " ")
    except Exception:
        return str(n)


def get_weekly_chat_stats(chat_id: int) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–º–ø–∞–∫—Ç–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞:
    - –∑–∞ –Ω–µ–¥–µ–ª—é (—Å—É–º–º–∞ –ø–æ daily[0..6]) –∏ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è (total) ‚Äî –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ;
    - –¥–æ–ø. –º–µ—Ç—Ä–∏–∫–∏: —Ñ–ª—É–¥–æ–Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å (total chars/msg), —Å—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Å—Ç–∏–∫–µ—Ä–æ–≤ –≤ —á–∞—Å.
    """
    stats = _load_stats()
    cid = str(chat_id)
    if cid not in stats:
        return "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."

    weekly_messages = 0
    weekly_chars = 0
    weekly_stickers = 0

    total_messages = 0
    total_chars = 0
    total_stickers = 0

    users_seen_week = 0  # –Ω–∞–ø–∏—Å–∞–ª–∏ >=1 —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π

    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ —á–∞—Ç–µ
    for _, u in stats[cid].items():
        # --- total ---
        t = u.get("total", {})
        total_messages += int(t.get("messages", 0) or 0)
        total_chars += int(t.get("chars", 0) or 0)
        total_stickers += int(t.get("stickers", 0) or 0)

        # --- weekly (—Å—É–º–º–∞ –ø–æ 7 —è—á–µ–π–∫–∞–º daily) ---
        week_msgs = 0
        week_chars = 0
        week_stk = 0
        for day in (u.get("daily") or [])[:7]:
            if not isinstance(day, dict):
                continue
            week_msgs += int(day.get("messages", 0) or 0)
            week_chars += int(day.get("chars", 0) or 0)
            week_stk += int(day.get("stickers", 0) or 0)

        if week_msgs > 0:
            users_seen_week += 1

        weekly_messages += week_msgs
        weekly_chars += week_chars
        weekly_stickers += week_stk

    # –°—Ä–µ–¥–Ω–∏–µ –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π
    avg_len_week = (weekly_chars / weekly_messages) if weekly_messages > 0 else 0.0
    avg_len_total = (total_chars / total_messages) if total_messages > 0 else 0.0

    # –°—Ç–∏–∫–µ—Ä–æ–≤ –≤ —á–∞—Å –∑–∞ –Ω–µ–¥–µ–ª—é
    stickers_per_hour = weekly_stickers / 168.0  # 7 * 24

    # –°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∑–∞ –Ω–µ–¥–µ–ª—é)
    avg_activity_per_user = (weekly_messages / users_seen_week) if users_seen_week > 0 else 0.0

    # –§–ª—É–¥–æ–Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å ‚Äî —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∑–∞ –≤—Å—ë –≤—Ä–µ–º—è)
    flood_density = avg_len_total

    # –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
    lines = []
    lines.append("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞ –∑–∞ –Ω–µ–¥–µ–ª—é (–∑–∞ –≤—Å—ë –≤—Ä–µ–º—è)")
    lines.append(f"- –°–æ–æ–±—â–µ–Ω–∏–π: {_fmt_int(weekly_messages)} ({_fmt_int(total_messages)})")
    lines.append(f"- –°—Ç–∏–∫–µ—Ä–æ–≤: {_fmt_int(weekly_stickers)} ({_fmt_int(total_stickers)})")
    lines.append(f"- –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {_fmt_float(avg_len_week, 1)} —Å–∏–º–≤–æ–ª–æ–≤ ({_fmt_float(avg_len_total, 1)})")
    lines.append("")
    lines.append("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:")
    lines.append(f"- –°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {_fmt_float(avg_activity_per_user, 1)} —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –Ω–µ–¥–µ–ª—é")
    lines.append(f"- –ê–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {_fmt_int(users_seen_week)}")
    lines.append(f"- –°—Ç–∏–∫–µ—Ä–æ–≤ –≤ —á–∞—Å: {_fmt_float(stickers_per_hour, 2)}")

    return "\n".join(lines)
