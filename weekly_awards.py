# weekly_awards.py
import asyncio
from datetime import datetime, timedelta
import logging

bot = None       # —Å—é–¥–∞ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –∏–∑ main.py
stats = None     # —Å—é–¥–∞ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
add_sits = None  # —Å—é–¥–∞ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∏—Ç

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–≥—Ä–∞–¥
WEEKLY_TOP_REWARDS = [10, 7, 5, 3, 3, 2, 2, 2, 2, 2]  # –∑–∞ 1‚Äì10 –º–µ—Å—Ç–∞
ACHIEVEMENT_REWARD = 5  # –∑–∞ –∫–∞–∂–¥—É—é –∞—á–∏–≤–∫—É

async def weekly_awards_task():
    """–ë–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 23:00 –ø–æ–¥–≤–æ–¥–∏—Ç –∏—Ç–æ–≥–∏ –Ω–µ–¥–µ–ª–∏."""
    while True:
        now = datetime.now()
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞—Ç—É –±–ª–∏–∂–∞–π—à–µ–≥–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è 23:00
        days_ahead = 6 - now.weekday()  # weekday(): –ü–Ω=0, –í—Å=6
        if days_ahead < 0:
            days_ahead += 7
        award_time = (now + timedelta(days=days_ahead)).replace(hour=23, minute=0, second=0, microsecond=0)
        if award_time <= now:
            award_time += timedelta(days=7)

        wait_seconds = (award_time - now).total_seconds()
        logging.info(f"[weekly_awards] –°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ {wait_seconds/3600:.1f} —á–∞—Å–æ–≤ ({award_time})")
        await asyncio.sleep(wait_seconds)

        await process_weekly_awards()


async def process_weekly_awards():
    """–ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤ –Ω–µ–¥–µ–ª–∏ –ø–æ –≤—Å–µ–º —á–∞—Ç–∞–º."""
    for chat_id, users in stats.items():
        try:
            await award_weekly_top(chat_id, users)
            await award_stickerbomber(chat_id, users)
            await award_flooder(chat_id, users)
            await award_dushnila(chat_id, users)
            await award_skomrnyashka(chat_id, users)
        except Exception as e:
            logging.exception(f"[weekly_awards] –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–∏ –≤ —á–∞—Ç–µ {chat_id}: {e}")


async def award_weekly_top(chat_id, users):
    """–¢–æ–ø-10 —Ñ–ª—É–¥–µ—Ä–æ–≤ –Ω–µ–¥–µ–ª–∏ + –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ."""
    totals = []
    for uid, data in users.items():
        week_msgs = sum(day["messages"] for day in data["daily"])
        if week_msgs > 0:
            totals.append((week_msgs, uid, data["name"]))

    totals.sort(reverse=True, key=lambda x: x[0])
    top10 = totals[:10]

    if not top10:
        return

    lines = ["üèÜ –¢–æ–ø-10 —Ñ–ª—É–¥–µ—Ä–æ–≤ –Ω–µ–¥–µ–ª–∏:"]
    for i, (msgs, uid, name) in enumerate(top10):
        reward = WEEKLY_TOP_REWARDS[i]
        add_sits(chat_id, uid, reward)
        lines.append(f"{i+1}. {name} ‚Äî {msgs} —Å–æ–æ–±—â–µ–Ω–∏–π (+{reward} —Å–∏—Ç)")

    await bot.send_message(chat_id, "\n".join(lines))


async def award_stickerbomber(chat_id, users):
    """–°—Ç–∏–∫–µ—Ä–±–æ–º–±–µ—Ä –Ω–µ–¥–µ–ª–∏ ‚Äî –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é."""
    candidates = []
    for uid, data in users.items():
        week_stickers = sum(day["stickers"] for day in data["daily"])
        if week_stickers > 0:
            candidates.append((week_stickers, uid, data["name"]))

    if not candidates:
        return

    candidates.sort(reverse=True, key=lambda x: x[0])
    winner = candidates[0]
    add_sits(chat_id, winner[1], ACHIEVEMENT_REWARD)

    text = f"üéØ –°—Ç–∏–∫–µ—Ä–±–æ–º–±–µ—Ä –Ω–µ–¥–µ–ª–∏ ‚Äî {winner[2]} ({winner[0]} —Å—Ç–∏–∫–µ—Ä–æ–≤)! +{ACHIEVEMENT_REWARD} —Å–∏—Ç"
    await bot.send_message(chat_id, text)


async def award_flooder(chat_id, users):
    """–§–ª—É–¥–µ—Ä –Ω–µ–¥–µ–ª–∏ ‚Äî —Å—Ä–µ–¥–∏ —Ç–æ–ø-10 –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º, –Ω–∞–∏–º–µ–Ω—å—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ chars/messages."""
    totals = []
    for uid, data in users.items():
        week_msgs = sum(day["messages"] for day in data["daily"])
        if week_msgs > 0:
            totals.append((week_msgs, uid, data["name"]))

    totals.sort(reverse=True, key=lambda x: x[0])
    top10 = totals[:10]
    if not top10:
        return

    ratios = []
    for msgs, uid, name in top10:
        week_chars = sum(day["chars"] for day in users[uid]["daily"])
        ratio = week_chars / msgs if msgs else float("inf")
        ratios.append((ratio, uid, name))

    ratios.sort(key=lambda x: x[0])  # –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ
    winner = ratios[0]
    add_sits(chat_id, winner[1], ACHIEVEMENT_REWARD)

    text = f"üí¨ –§–ª—É–¥–µ—Ä –Ω–µ–¥–µ–ª–∏ ‚Äî {winner[2]} (—Å—Ä. –¥–ª–∏–Ω–∞ {winner[0]:.1f} —Å–∏–º–≤./—Å–æ–æ–±—â.)! +{ACHIEVEMENT_REWARD} —Å–∏—Ç"
    await bot.send_message(chat_id, text)


async def award_dushnila(chat_id, users):
    """–î—É—à–Ω–∏–ª–∞ –Ω–µ–¥–µ–ª–∏ ‚Äî —Å—Ä–µ–¥–∏ —Ç–æ–ø-15 –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º, –Ω–∞–∏–±–æ–ª—å—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ chars/messages."""
    totals = []
    for uid, data in users.items():
        week_msgs = sum(day["messages"] for day in data["daily"])
        if week_msgs > 0:
            totals.append((week_msgs, uid, data["name"]))

    totals.sort(reverse=True, key=lambda x: x[0])
    top15 = totals[:15]
    if not top15:
        return

    ratios = []
    for msgs, uid, name in top15:
        week_chars = sum(day["chars"] for day in users[uid]["daily"])
        ratio = week_chars / msgs if msgs else 0
        ratios.append((ratio, uid, name))

    ratios.sort(reverse=True, key=lambda x: x[0])  # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ
    winner = ratios[0]
    add_sits(chat_id, winner[1], ACHIEVEMENT_REWARD)

    text = f"üìú –î—É—à–Ω–∏–ª–∞ –Ω–µ–¥–µ–ª–∏ ‚Äî {winner[2]} (—Å—Ä. –¥–ª–∏–Ω–∞ {winner[0]:.1f} —Å–∏–º–≤./—Å–æ–æ–±—â.)! +{ACHIEVEMENT_REWARD} —Å–∏—Ç"
    await bot.send_message(chat_id, text)


async def award_skomrnyashka(chat_id, users):
    """–°–∫—Ä–æ–º–Ω—è—à–∫–∞ –Ω–µ–¥–µ–ª–∏ ‚Äî –Ω–∞–∏–º–µ–Ω—å—à–µ–µ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π —Å—Ä–µ–¥–∏ —Ç–µ—Ö, —É –∫–æ–≥–æ >= 5 —Å–æ–æ–±—â–µ–Ω–∏–π."""
    candidates = []
    for uid, data in users.items():
        week_msgs = sum(day["messages"] for day in data["daily"])
        if week_msgs >= 5:
            candidates.append((week_msgs, uid, data["name"]))

    if not candidates:
        return

    candidates.sort(key=lambda x: x[0])  # –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    winner = candidates[0]
    add_sits(chat_id, winner[1], ACHIEVEMENT_REWARD)

    text = f"üôà –°–∫—Ä–æ–º–Ω—è—à–∫–∞ –Ω–µ–¥–µ–ª–∏ ‚Äî {winner[2]} ({winner[0]} —Å–æ–æ–±—â–µ–Ω–∏–π)! +{ACHIEVEMENT_REWARD} —Å–∏—Ç"
    await bot.send_message(chat_id, text)

